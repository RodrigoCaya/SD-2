// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.5.1
// source: nn.proto

package nn_proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *CodeRequest) Reset() {
	*x = CodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nn_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CodeRequest) ProtoMessage() {}

func (x *CodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nn_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CodeRequest.ProtoReflect.Descriptor instead.
func (*CodeRequest) Descriptor() ([]byte, []int) {
	return file_nn_proto_rawDescGZIP(), []int{0}
}

func (x *CodeRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type Partes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Partes1 string `protobuf:"bytes,1,opt,name=partes1,proto3" json:"partes1,omitempty"`
	Partes2 string `protobuf:"bytes,2,opt,name=partes2,proto3" json:"partes2,omitempty"`
	Partes3 string `protobuf:"bytes,3,opt,name=partes3,proto3" json:"partes3,omitempty"`
}

func (x *Partes) Reset() {
	*x = Partes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nn_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Partes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Partes) ProtoMessage() {}

func (x *Partes) ProtoReflect() protoreflect.Message {
	mi := &file_nn_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Partes.ProtoReflect.Descriptor instead.
func (*Partes) Descriptor() ([]byte, []int) {
	return file_nn_proto_rawDescGZIP(), []int{1}
}

func (x *Partes) GetPartes1() string {
	if x != nil {
		return x.Partes1
	}
	return ""
}

func (x *Partes) GetPartes2() string {
	if x != nil {
		return x.Partes2
	}
	return ""
}

func (x *Partes) GetPartes3() string {
	if x != nil {
		return x.Partes3
	}
	return ""
}

type Propuesta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cantidadn1    string `protobuf:"bytes,1,opt,name=cantidadn1,proto3" json:"cantidadn1,omitempty"`
	Cantidadn2    string `protobuf:"bytes,2,opt,name=cantidadn2,proto3" json:"cantidadn2,omitempty"`
	Cantidadn3    string `protobuf:"bytes,3,opt,name=cantidadn3,proto3" json:"cantidadn3,omitempty"`
	Nombrel       string `protobuf:"bytes,4,opt,name=nombrel,proto3" json:"nombrel,omitempty"`
	Cantidadtotal string `protobuf:"bytes,5,opt,name=cantidadtotal,proto3" json:"cantidadtotal,omitempty"`
}

func (x *Propuesta) Reset() {
	*x = Propuesta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nn_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Propuesta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Propuesta) ProtoMessage() {}

func (x *Propuesta) ProtoReflect() protoreflect.Message {
	mi := &file_nn_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Propuesta.ProtoReflect.Descriptor instead.
func (*Propuesta) Descriptor() ([]byte, []int) {
	return file_nn_proto_rawDescGZIP(), []int{2}
}

func (x *Propuesta) GetCantidadn1() string {
	if x != nil {
		return x.Cantidadn1
	}
	return ""
}

func (x *Propuesta) GetCantidadn2() string {
	if x != nil {
		return x.Cantidadn2
	}
	return ""
}

func (x *Propuesta) GetCantidadn3() string {
	if x != nil {
		return x.Cantidadn3
	}
	return ""
}

func (x *Propuesta) GetNombrel() string {
	if x != nil {
		return x.Nombrel
	}
	return ""
}

func (x *Propuesta) GetCantidadtotal() string {
	if x != nil {
		return x.Cantidadtotal
	}
	return ""
}

var File_nn_proto protoreflect.FileDescriptor

var file_nn_proto_rawDesc = []byte{
	0x0a, 0x08, 0x6e, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x6e, 0x6e, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x21, 0x0a, 0x0b, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x56, 0x0a, 0x06, 0x50, 0x61, 0x72, 0x74, 0x65,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x72, 0x74, 0x65, 0x73, 0x31, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x72, 0x74, 0x65, 0x73, 0x31, 0x12, 0x18, 0x0a, 0x07, 0x70,
	0x61, 0x72, 0x74, 0x65, 0x73, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61,
	0x72, 0x74, 0x65, 0x73, 0x32, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x72, 0x74, 0x65, 0x73, 0x33,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x72, 0x74, 0x65, 0x73, 0x33, 0x22,
	0xab, 0x01, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x70, 0x75, 0x65, 0x73, 0x74, 0x61, 0x12, 0x1e, 0x0a,
	0x0a, 0x63, 0x61, 0x6e, 0x74, 0x69, 0x64, 0x61, 0x64, 0x6e, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x61, 0x6e, 0x74, 0x69, 0x64, 0x61, 0x64, 0x6e, 0x31, 0x12, 0x1e, 0x0a,
	0x0a, 0x63, 0x61, 0x6e, 0x74, 0x69, 0x64, 0x61, 0x64, 0x6e, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x61, 0x6e, 0x74, 0x69, 0x64, 0x61, 0x64, 0x6e, 0x32, 0x12, 0x1e, 0x0a,
	0x0a, 0x63, 0x61, 0x6e, 0x74, 0x69, 0x64, 0x61, 0x64, 0x6e, 0x33, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x61, 0x6e, 0x74, 0x69, 0x64, 0x61, 0x64, 0x6e, 0x33, 0x12, 0x18, 0x0a,
	0x07, 0x6e, 0x6f, 0x6d, 0x62, 0x72, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6e, 0x6f, 0x6d, 0x62, 0x72, 0x65, 0x6c, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x61, 0x6e, 0x74, 0x69,
	0x64, 0x61, 0x64, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x63, 0x61, 0x6e, 0x74, 0x69, 0x64, 0x61, 0x64, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x32, 0x91, 0x02,
	0x0a, 0x11, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x3e, 0x0a, 0x0c, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4c, 0x69,
	0x73, 0x74, 0x61, 0x12, 0x15, 0x2e, 0x6e, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x6e, 0x6e, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0f, 0x45, 0x6e, 0x76, 0x69, 0x61, 0x72, 0x50, 0x72, 0x6f,
	0x70, 0x75, 0x65, 0x73, 0x74, 0x61, 0x12, 0x13, 0x2e, 0x6e, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x75, 0x65, 0x73, 0x74, 0x61, 0x1a, 0x13, 0x2e, 0x6e, 0x6e,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x75, 0x65, 0x73, 0x74, 0x61,
	0x22, 0x00, 0x12, 0x3c, 0x0a, 0x0c, 0x41, 0x67, 0x72, 0x65, 0x67, 0x61, 0x72, 0x41, 0x6c, 0x4c,
	0x6f, 0x67, 0x12, 0x13, 0x2e, 0x6e, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72,
	0x6f, 0x70, 0x75, 0x65, 0x73, 0x74, 0x61, 0x1a, 0x15, 0x2e, 0x6e, 0x6e, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x00,
	0x12, 0x3f, 0x0a, 0x12, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x63, 0x69, 0x6f, 0x6e, 0x65, 0x73, 0x12, 0x15, 0x2e, 0x6e, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e,
	0x6e, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x65, 0x73, 0x22,
	0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_nn_proto_rawDescOnce sync.Once
	file_nn_proto_rawDescData = file_nn_proto_rawDesc
)

func file_nn_proto_rawDescGZIP() []byte {
	file_nn_proto_rawDescOnce.Do(func() {
		file_nn_proto_rawDescData = protoimpl.X.CompressGZIP(file_nn_proto_rawDescData)
	})
	return file_nn_proto_rawDescData
}

var file_nn_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_nn_proto_goTypes = []interface{}{
	(*CodeRequest)(nil), // 0: nn_proto.CodeRequest
	(*Partes)(nil),      // 1: nn_proto.Partes
	(*Propuesta)(nil),   // 2: nn_proto.Propuesta
}
var file_nn_proto_depIdxs = []int32{
	0, // 0: nn_proto.HelloworldService.DisplayLista:input_type -> nn_proto.CodeRequest
	2, // 1: nn_proto.HelloworldService.EnviarPropuesta:input_type -> nn_proto.Propuesta
	2, // 2: nn_proto.HelloworldService.AgregarAlLog:input_type -> nn_proto.Propuesta
	0, // 3: nn_proto.HelloworldService.DisplayDirecciones:input_type -> nn_proto.CodeRequest
	0, // 4: nn_proto.HelloworldService.DisplayLista:output_type -> nn_proto.CodeRequest
	2, // 5: nn_proto.HelloworldService.EnviarPropuesta:output_type -> nn_proto.Propuesta
	0, // 6: nn_proto.HelloworldService.AgregarAlLog:output_type -> nn_proto.CodeRequest
	1, // 7: nn_proto.HelloworldService.DisplayDirecciones:output_type -> nn_proto.Partes
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_nn_proto_init() }
func file_nn_proto_init() {
	if File_nn_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_nn_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nn_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Partes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nn_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Propuesta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_nn_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_nn_proto_goTypes,
		DependencyIndexes: file_nn_proto_depIdxs,
		MessageInfos:      file_nn_proto_msgTypes,
	}.Build()
	File_nn_proto = out.File
	file_nn_proto_rawDesc = nil
	file_nn_proto_goTypes = nil
	file_nn_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// HelloworldServiceClient is the client API for HelloworldService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HelloworldServiceClient interface {
	DisplayLista(ctx context.Context, in *CodeRequest, opts ...grpc.CallOption) (*CodeRequest, error)
	EnviarPropuesta(ctx context.Context, in *Propuesta, opts ...grpc.CallOption) (*Propuesta, error)
	AgregarAlLog(ctx context.Context, in *Propuesta, opts ...grpc.CallOption) (*CodeRequest, error)
	DisplayDirecciones(ctx context.Context, in *CodeRequest, opts ...grpc.CallOption) (*Partes, error)
}

type helloworldServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewHelloworldServiceClient(cc grpc.ClientConnInterface) HelloworldServiceClient {
	return &helloworldServiceClient{cc}
}

func (c *helloworldServiceClient) DisplayLista(ctx context.Context, in *CodeRequest, opts ...grpc.CallOption) (*CodeRequest, error) {
	out := new(CodeRequest)
	err := c.cc.Invoke(ctx, "/nn_proto.HelloworldService/DisplayLista", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *helloworldServiceClient) EnviarPropuesta(ctx context.Context, in *Propuesta, opts ...grpc.CallOption) (*Propuesta, error) {
	out := new(Propuesta)
	err := c.cc.Invoke(ctx, "/nn_proto.HelloworldService/EnviarPropuesta", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *helloworldServiceClient) AgregarAlLog(ctx context.Context, in *Propuesta, opts ...grpc.CallOption) (*CodeRequest, error) {
	out := new(CodeRequest)
	err := c.cc.Invoke(ctx, "/nn_proto.HelloworldService/AgregarAlLog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *helloworldServiceClient) DisplayDirecciones(ctx context.Context, in *CodeRequest, opts ...grpc.CallOption) (*Partes, error) {
	out := new(Partes)
	err := c.cc.Invoke(ctx, "/nn_proto.HelloworldService/DisplayDirecciones", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HelloworldServiceServer is the server API for HelloworldService service.
type HelloworldServiceServer interface {
	DisplayLista(context.Context, *CodeRequest) (*CodeRequest, error)
	EnviarPropuesta(context.Context, *Propuesta) (*Propuesta, error)
	AgregarAlLog(context.Context, *Propuesta) (*CodeRequest, error)
	DisplayDirecciones(context.Context, *CodeRequest) (*Partes, error)
}

// UnimplementedHelloworldServiceServer can be embedded to have forward compatible implementations.
type UnimplementedHelloworldServiceServer struct {
}

func (*UnimplementedHelloworldServiceServer) DisplayLista(context.Context, *CodeRequest) (*CodeRequest, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DisplayLista not implemented")
}
func (*UnimplementedHelloworldServiceServer) EnviarPropuesta(context.Context, *Propuesta) (*Propuesta, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EnviarPropuesta not implemented")
}
func (*UnimplementedHelloworldServiceServer) AgregarAlLog(context.Context, *Propuesta) (*CodeRequest, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AgregarAlLog not implemented")
}
func (*UnimplementedHelloworldServiceServer) DisplayDirecciones(context.Context, *CodeRequest) (*Partes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DisplayDirecciones not implemented")
}

func RegisterHelloworldServiceServer(s *grpc.Server, srv HelloworldServiceServer) {
	s.RegisterService(&_HelloworldService_serviceDesc, srv)
}

func _HelloworldService_DisplayLista_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelloworldServiceServer).DisplayLista(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nn_proto.HelloworldService/DisplayLista",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelloworldServiceServer).DisplayLista(ctx, req.(*CodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HelloworldService_EnviarPropuesta_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Propuesta)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelloworldServiceServer).EnviarPropuesta(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nn_proto.HelloworldService/EnviarPropuesta",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelloworldServiceServer).EnviarPropuesta(ctx, req.(*Propuesta))
	}
	return interceptor(ctx, in, info, handler)
}

func _HelloworldService_AgregarAlLog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Propuesta)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelloworldServiceServer).AgregarAlLog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nn_proto.HelloworldService/AgregarAlLog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelloworldServiceServer).AgregarAlLog(ctx, req.(*Propuesta))
	}
	return interceptor(ctx, in, info, handler)
}

func _HelloworldService_DisplayDirecciones_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelloworldServiceServer).DisplayDirecciones(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nn_proto.HelloworldService/DisplayDirecciones",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelloworldServiceServer).DisplayDirecciones(ctx, req.(*CodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _HelloworldService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "nn_proto.HelloworldService",
	HandlerType: (*HelloworldServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DisplayLista",
			Handler:    _HelloworldService_DisplayLista_Handler,
		},
		{
			MethodName: "EnviarPropuesta",
			Handler:    _HelloworldService_EnviarPropuesta_Handler,
		},
		{
			MethodName: "AgregarAlLog",
			Handler:    _HelloworldService_AgregarAlLog_Handler,
		},
		{
			MethodName: "DisplayDirecciones",
			Handler:    _HelloworldService_DisplayDirecciones_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "nn.proto",
}
